{"version":3,"sources":["components/todo-form/todo-form.component.jsx","components/todo-list/todo-list.component.jsx","components/notice/notice.component.jsx","App.js","index.js"],"names":["TodoFrom","props","className","styledClasses","form","noValidate","onSubmit","e","submitForm","Grid","container","spacing","item","xs","TextField","variant","required","fullWidth","label","isEditing","onChange","inputChange","value","todo","inputRef","Button","type","color","submit","TodoList","Box","styledClass","List","todos","map","id","task","ListItem","button","ListItemIcon","IconButton","title","onClick","editTodo","ListItemText","primary","removeTodo","Notice","Snackbar","anchorOrigin","vertical","horizontal","open","showNotice","autoHideDuration","onClose","noticeClose","Alert","severity","noticeType","noticeMessage","useStyles","makeStyles","theme","width","marginTop","margin","todoList","maxHeight","overflowY","App","useState","setTodo","localStorage","getItem","JSON","parse","getLocalStorage","setTodoList","setIsEditing","editId","setEditId","show","message","snackbarConf","setSnackbarConf","classes","useRef","useEffect","setItem","stringify","Container","component","maxWidth","CssBaseline","Typography","align","direction","preventDefault","newTodo","Date","getTime","toString","target","justify","length","filter","specificTodo","find","current","focus","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86a22612.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Grid, TextField} from \"@material-ui/core\";\r\n\r\n\r\nconst TodoFrom = ( props ) => {\r\n\r\n    return (\r\n        <form className={ props.styledClasses.form } noValidate onSubmit={ (e) => props.submitForm(e) }>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        label={ props.isEditing ? `Edit your task` : `Add your task` }\r\n                        onChange={ (e) => props.inputChange(e) }\r\n                        value={ props.todo }\r\n                        inputRef={ props.inputRef }\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={ props.styledClasses.submit }\r\n            >\r\n                {\r\n                    props.isEditing ?\r\n                        `Edit Task`\r\n                        :\r\n                        'Add Task'\r\n                }\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoFrom;","import React from 'react';\r\nimport { Box, List, ListItemIcon, ListItem, ListItemText, IconButton } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst TodoList = ( props ) => {\r\n    return (\r\n        <Box className={ props.styledClass }>\r\n            <List>\r\n                {\r\n                    props.todos ?\r\n                        props.todos.map( ( { id, task } ) => {\r\n                            return (\r\n                                <ListItem key={ id } button>\r\n                                    <ListItemIcon>\r\n                                        <IconButton title={ `Edit task` } onClick={ () => props.editTodo(id) }>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={ task } />\r\n                                    <ListItemIcon>\r\n                                        <IconButton title={ `Delete task` } onClick={ () => props.removeTodo(id) }>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemIcon>\r\n                                </ListItem>\r\n                            )\r\n                        } )\r\n                        :\r\n                        null\r\n                }\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst Notice = ( props ) => {\r\n\r\n    return (\r\n        <Snackbar anchorOrigin={ { vertical: 'top', horizontal: 'center' } } open={ props.showNotice } autoHideDuration={3000} onClose={ () => props.noticeClose() }>\r\n            <Alert onClose={ () => props.noticeClose() } severity={ props.noticeType }>{ props.noticeMessage }</Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default Notice;","import React, {useState, useEffect, useRef, Fragment} from 'react';\nimport { Container, Grid, CssBaseline, makeStyles, Typography, Button } from '@material-ui/core';\n\nimport TodoFrom from \"./components/todo-form/todo-form.component\";\nimport TodoList from \"./components/todo-list/todo-list.component\";\nimport Notice from \"./components/notice/notice.component\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    todoList: {\n        width: '100%',\n        maxHeight: '450px',\n        overflowY: 'scroll'\n    }\n}));\n\nconst getLocalStorage = () => {\n    const todoList = localStorage.getItem( 'todoList' );\n\n    if ( todoList ) {\n        return JSON.parse( todoList );\n    } else {\n        return [];\n    }\n}\n\nconst App = () => {\n    const [ todo, setTodo ] = useState('');\n    const [ todoList, setTodoList ] = useState(getLocalStorage());\n    const [ isEditing, setIsEditing ] = useState( false );\n    const [ editId, setEditId ] = useState( null );\n    const [ snackbarConf, setSnackbarConf ] = useState({ show: false, type: '', message: '' } )\n    const classes = useStyles();\n    const inputRef = useRef();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        if ( ! todo ) {\n            showNotice( true, 'error', 'Task field is empty!' );\n        } else if ( todo && isEditing ) {\n            setTodoList( todoList.map( item => {\n                if ( item.id === editId ) {\n                    return { ...item, task: todo }\n                }\n                return item;\n            } ) );\n            setTodo( '' );\n            setEditId( null );\n            setIsEditing( false );\n            showNotice( true, 'success', 'Successfully updated task!' );\n        } else {\n            const newTodo = { id: new Date().getTime().toString(), task: todo };\n            setTodoList( [...todoList, newTodo ] );\n            setTodo('');\n            showNotice( true, 'success', 'Successfully added task!' );\n        }\n    }\n\n    const onChangeHandler = (e) => {\n        setTodo(e.target.value);\n    }\n\n    const noticeClose = () => {\n        showNotice( false, '', '' );\n    }\n\n    const clearTodoList = () => {\n        setTodoList( [] );\n        showNotice( true, 'success', 'Cleared all tasks' );\n    }\n\n    const showNotice = ( show=false, type='', message='') => {\n        setSnackbarConf( { show, type, message } )\n    }\n\n    const removeTodo = ( id ) => {\n        showNotice( true, 'warning', `Task with ${id} removed!` );\n        setTodoList( todoList.filter( (todo) => todo.id !== id ) );\n    }\n\n    const editTodo = ( id ) => {\n        const specificTodo = todoList.find( ( todo ) => todo.id === id );\n        setIsEditing( true );\n        setEditId( id );\n        setTodo( specificTodo.task );\n        inputRef.current.focus()\n    }\n\n    useEffect(() => {\n        localStorage.setItem( 'todoList', JSON.stringify( todoList ) )\n    }, [todoList]);\n\n    return (\n        <Container component=\"main\" maxWidth=\"xl\">\n            <CssBaseline />\n            <Typography component=\"h1\" variant=\"h2\" align='center'>\n                A Simple React Todo App!\n            </Typography>\n            <hr />\n            <Grid container spacing={1} direction='row'>\n                <Grid container item xs={6}>\n                    <TodoFrom styledClasses={ { form: classes.form, submit: classes.submit } } isEditing={ isEditing } todo={ todo } submitForm={ onSubmitHandler } inputChange={ onChangeHandler } inputRef={ inputRef } />\n                </Grid>\n                <Grid container item xs={6} justify='center'>\n                    {\n                        todoList.length > 0 &&\n                        <Fragment>\n                            <TodoList styledClass={ classes.todoList } todos={ todoList } removeTodo={removeTodo} editTodo={editTodo} />\n                            <Button variant=\"contained\" color='primary' onClick={ clearTodoList } disabled={ 0 === todoList.length }>Clear</Button>\n                        </Fragment>\n                    }\n                </Grid>\n            </Grid>\n            <Notice showNotice={ snackbarConf.show } noticeClose={ noticeClose } noticeType={ snackbarConf.type ? snackbarConf.type : 'success' } noticeMessage={ snackbarConf.message } />\n        </Container>\n    )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}